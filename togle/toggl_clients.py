import requests
import csv
import os

print("üîß Toggl –ö–ª–∏–µ–Ω—Ç—ã: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ CSV")

# –ü–æ–ª—É—á–∞–µ–º API —Ç–æ–∫–µ–Ω
api_token = input("üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Toggl API —Ç–æ–∫–µ–Ω: ").strip()
auth = (api_token, "api_token")

# –ü–æ–ª—É—á–∞–µ–º workspace_id
print("üì° –ü–æ–ª—É—á–∞–µ–º workspace ID...")
me_response = requests.get("https://api.track.toggl.com/api/v9/me", auth=auth)
if me_response.status_code != 200:
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API —Ç–æ–∫–µ–Ω.")
    exit(1)

workspace_id = me_response.json().get("default_workspace_id")
print(f"‚úÖ Workspace ID: {workspace_id}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV-—Ñ–∞–π–ª
file_name = "Cl_N.csv"
if not os.path.exists(file_name):
    print(f"‚ùå –§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ª–æ–∂–∏—Ç–µ –µ–≥–æ —Ä—è–¥–æ–º —Å —ç—Ç–∏–º .exe")
    exit(1)

print(f"üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª: {file_name}")
with open(file_name, encoding="utf-8-sig") as f:
    reader = csv.DictReader(f)
    rows = list(reader)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
# clients_url = f"https://api.track.toggl.com/api/v9/workspaces/{workspace_id}/clients"
clients_url = f"https://api.track.toggl.com/api/v9/workspaces/{workspace_id}/projects"
clients_response = requests.get(clients_url, auth=auth)
existing_clients = clients_response.json() if clients_response.status_code == 200 else []

client_map = {client['name']: client['id'] for client in existing_clients}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–∑ CSV
for row in rows:
    old_name = row.get("old_name", "").strip()
    new_name = row.get("new_name", "").strip()

    # 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ
    if not old_name and new_name:
        if new_name in client_map:
            print(f"‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {new_name}")
        else:
            response = requests.post(clients_url, auth=auth, json={"name": new_name})
            if response.status_code == 200:
                print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {new_name}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {new_name}: {response.status_code} - {response.text}")

    # 2. –£–¥–∞–ª–µ–Ω–∏–µ
    elif old_name and not new_name:
        if old_name in client_map:
            client_id = client_map[old_name]
            delete_url = f"{clients_url}/{client_id}"
            response = requests.delete(delete_url, auth=auth)
            if response.status_code == 200:
                print(f"üóëÔ∏è –ö–ª–∏–µ–Ω—Ç —É–¥–∞–ª—ë–Ω: {old_name}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {old_name}: {response.status_code} - {response.text}")
        else:
            print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∫–ª–∏–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {old_name}")

    # 3. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
    elif old_name and new_name:
        if old_name in client_map:
            client_id = client_map[old_name]
            update_url = f"{clients_url}/{client_id}"
            response = requests.put(update_url, auth=auth, json={"name": new_name})
            if response.status_code == 200:
                print(f"üîÅ –ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {old_name} ‚Üí {new_name}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ {old_name}: {response.status_code} - {response.text}")
        else:
            print(f"‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {old_name}")

print("\nüèÅ –ì–æ—Ç–æ–≤–æ!")
input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
